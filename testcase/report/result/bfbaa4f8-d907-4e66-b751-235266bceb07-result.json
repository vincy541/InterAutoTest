{"name": "test_create_project", "status": "broken", "statusDetails": {"message": "AttributeError: 'int' object has no attribute 'log'", "trace": "self = 3, body = 3, expected_body = 6\n\n    def assert_body(self, body, expected_body):\n        \"\"\"\n        验证返回结果内容相等\n        :param body:\n        :param expected_body:\n        :return:\n        \"\"\"\n        try:\n>           assert body == expected_body\nE           AssertionError\n\n../utils/AssertUtil.py:36: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\n    def test_create_project():\n        # 一、创建项目接口请求\n        # create_project_url = f\"{base_url}/project_hub/create_project\"\n        timestamp = int(time.time())\n        dt_object = time.localtime(timestamp)\n        formatted_time = time.strftime(\"%Y-%m-%d\", dt_object)\n        formatted_time1 = time.strftime(\"%m%d%H%M%S\", dt_object)\n        print(\"时间戳转换为日期时间对象：\", formatted_time)\n        # url = \"https://rockbang.com.cn/api/sss/auth/project_hub/create_project\"\n        create_project_data = {\n            \"operatorId\": \"\",\n            \"projectName\": \"cs12 api\" + \" \" + formatted_time1,\n            \"ownerId\": \"4GcrWZrTeFN\",\n            \"initiationTime\": formatted_time + \"T16:00:00.000Z\",\n            \"managerId\": \"SssUser0001\"\n        }\n        # 获取sid\n        cookie = {\n            \"sid\": common.get_sid()\n        }\n        # request = Request()\n        # response = request.post(create_project_url, json=create_project_data, cookies=cookie)\n        r = common.create_project(create_project_data, cookie)\n        print(r.json())\n        pid = r.json()['content']['data']\n        print(\"项目id为：\", pid)\n        # 二、查看项目详情\n        r_detail = common.project_detail(pid, cookie)\n        pname = r_detail.json()['content']['projectView']['name']\n        # print(r_detail.json())\n        print(\"项目名称为：\", pname)\n        initiationTime = r_detail.json()['content']['projectView']['initiationTime']\n        print(\"项目创建时间为：\", initiationTime)\n    \n        # 三、更新 填充「项目信息」的请求参数\n        # 1.读取yaml文件\n        filling_data = YamlReader(\"../data/filling_project.yml\").data()\n        filling_data['projectId'] = pid\n        filling_data['name'] = pname\n        filling_data['initiationTime'] = initiationTime\n        # 2.遍历结果，查找符合条件的projectId\n        for project_data in filling_data['projectDemandList']:\n            project_data['projectId'] = pid\n    \n        YamlReader(\"../data/filling_project.yml\").update_dump(filling_data)\n    \n        # 四、完成【项目信息】任务\n        # filling_data = YamlReader(\"../data/filling_project.yml\").data()\n        # print(filling_data)\n        filling_project_url = f\"{base_url}/project_hub/filling_project\"\n        # cookie = {\n        #     \"sid\": common.get_sid()\n        # }\n        request = Request()\n        response = request.post(filling_project_url, json=filling_data, cookies=cookie)\n        print(response)\n    \n        # 五、判断「项目信息」任务是否已完成\n        # 1.查询任务详情\n        select_data = {\"groupId\": pid}\n        r = common.task_detail(select_data, cookie)\n        # print(r.json()['content']['taskDetails'][1]['task']['type'])\n        task_type = '0101001001'\n    \n        # 2.遍历结果，查找符合条件的任务\n        for task_data in r.json()['content']['taskDetails']:\n            if task_data['task']['type'] == task_type:\n                # 找到匹配的任务，获取任务状态\n                task_status = task_data['task']['status']\n                print(\"项目信息任务状态为：\", task_status)\n                # assert task_status == 6\n>               if AssertUtil.assert_body(task_status, task_status, 6):\n\ntest_login2.py:88: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = 3, body = 3, expected_body = 6\n\n    def assert_body(self, body, expected_body):\n        \"\"\"\n        验证返回结果内容相等\n        :param body:\n        :param expected_body:\n        :return:\n        \"\"\"\n        try:\n            assert body == expected_body\n            return True\n        except:\n>           self.log.error(\"body error,body is %s,expected_body is %s\" % (body, expected_body))\nE           AttributeError: 'int' object has no attribute 'log'\n\n../utils/AssertUtil.py:39: AttributeError"}, "attachments": [{"name": "log", "source": "12ee4b62-f5bf-4561-98dc-6779295a5e1f-attachment.txt", "type": "text/plain"}], "start": 1701675481126, "stop": 1701675482588, "uuid": "67986d51-d52c-4272-b4c1-d6982abbc449", "historyId": "3071a392ad7ad896a18a07484722d061", "testCaseId": "3071a392ad7ad896a18a07484722d061", "fullName": "testcase.test_login2#test_create_project", "labels": [{"name": "parentSuite", "value": "testcase"}, {"name": "suite", "value": "test_login2"}, {"name": "host", "value": "lifaliangdeAir.lan"}, {"name": "thread", "value": "25561-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.test_login2"}]}