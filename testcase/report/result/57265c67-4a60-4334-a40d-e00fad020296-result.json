{"name": "test_filling_project", "status": "broken", "statusDetails": {"message": "AttributeError: 'int' object has no attribute 'log'", "trace": "self = 3, body = 3, expected_body = 6\n\n    def assert_body(self, body, expected_body):\n        \"\"\"\n        验证返回结果内容相等\n        :param body:\n        :param expected_body:\n        :return:\n        \"\"\"\n        try:\n>           assert body == expected_body\nE           AssertionError\n\n../utils/AssertUtil.py:36: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\n    def test_filling_project():\n        filling_data = YamlReader(\"../data/filling_project.yml\").data()\n        # print(filling_data)\n        filling_project_url = f\"{base_url}/project_hub/filling_project\"\n        cookie = {\n            \"sid\": common.get_sid()\n        }\n        request = Request()\n        response = request.post(filling_project_url, json=filling_data, cookies=cookie)\n        print(response)\n        # 判断「项目信息」任务是否已完成\n        # 1.查询任务详情\n        select_data = {\"groupId\": \"MPJ231204000054\"}\n        r = common.task_detail(select_data, cookie)\n        # print(r.json()['content']['taskDetails'][1]['task']['type'])\n        task_type = '0101001001'\n    \n        # 2.遍历结果，查找符合条件的任务\n        for task_data in r.json()['content']['taskDetails']:\n            if task_data['task']['type'] == task_type:\n                # 找到匹配的任务，获取任务状态\n                task_status = task_data['task']['status']\n                print(\"项目信息任务状态为：\", task_status)\n                # assert task_status == 6\n>               if AssertUtil.assert_body(task_status, task_status, 6):\n\ntest_login2.py:123: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = 3, body = 3, expected_body = 6\n\n    def assert_body(self, body, expected_body):\n        \"\"\"\n        验证返回结果内容相等\n        :param body:\n        :param expected_body:\n        :return:\n        \"\"\"\n        try:\n            assert body == expected_body\n            return True\n        except:\n>           self.log.error(\"body error,body is %s,expected_body is %s\" % (body, expected_body))\nE           AttributeError: 'int' object has no attribute 'log'\n\n../utils/AssertUtil.py:39: AttributeError"}, "attachments": [{"name": "log", "source": "c9b489c4-05cc-4a27-a30f-6f6c57dc7b0d-attachment.txt", "type": "text/plain"}], "start": 1701675832104, "stop": 1701675832979, "uuid": "d44c7c3b-9a94-40a1-b52a-527720c8db72", "historyId": "19d1eeaf3809b3d4033f7b6e6b8088d7", "testCaseId": "19d1eeaf3809b3d4033f7b6e6b8088d7", "fullName": "testcase.test_login2#test_filling_project", "labels": [{"name": "parentSuite", "value": "testcase"}, {"name": "suite", "value": "test_login2"}, {"name": "host", "value": "lifaliangdeAir.lan"}, {"name": "thread", "value": "25615-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.test_login2"}]}