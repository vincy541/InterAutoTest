{"name": "test_get_project_details", "status": "broken", "statusDetails": {"message": "TypeError: string indices must be integers", "trace": "api_base_url = 'https://rockbang.com.cn/api/sss/auth', access_sid = '98134489-cca1-48b8-ab6c-4a07362a0349'\n\n    @pytest.fixture(scope=\"module\")\n    def project_id(api_base_url, access_sid):\n        # 创建项目接口请求\n        create_project_url = f\"{api_base_url}/project_hub/create_project\"\n        timestamp = int(time.time())\n        dt_object = time.localtime(timestamp)\n        formatted_time = time.strftime(\"%Y-%m-%d\", dt_object)\n        formatted_time1 = time.strftime(\"%m%d%H%M%S\", dt_object)\n        print(\"时间戳转换为日期时间对象：\", formatted_time)\n        # url = \"https://rockbang.com.cn/api/sss/auth/project_hub/create_project\"\n        create_project_data = {\n            \"operatorId\": \"\",\n            \"projectName\": \"cs12 api\" + \" \" + formatted_time1,\n            \"ownerId\": \"4GcrWZrTeFN\",\n            \"initiationTime\": formatted_time + \"T16:00:00.000Z\",\n            \"managerId\": \"SssUser0001\"\n        }\n    \n        cookie = {\n            \"sid\": \"98134489-cca1-48b8-ab6c-4a07362a0349\"\n        }\n        request = Request()\n>       response = request.post(create_project_url, json=create_project_data, cookies=access_sid)\n\ntest_login2.py:40: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n../utils/RequestsUtil.py:89: in post\n    return self.requests_api(url, method=\"post\", **kwargs)\n../utils/RequestsUtil.py:59: in requests_api\n    r = requests.post(url, json=json, headers=headers, cookies=cookies)\n../venv/lib/python3.8/site-packages/requests/api.py:115: in post\n    return request(\"post\", url, data=data, json=json, **kwargs)\n../venv/lib/python3.8/site-packages/requests/api.py:59: in request\n    return session.request(method=method, url=url, **kwargs)\n../venv/lib/python3.8/site-packages/requests/sessions.py:575: in request\n    prep = self.prepare_request(req)\n../venv/lib/python3.8/site-packages/requests/sessions.py:473: in prepare_request\n    cookies = cookiejar_from_dict(cookies)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ncookie_dict = '98134489-cca1-48b8-ab6c-4a07362a0349', cookiejar = <RequestsCookieJar[]>, overwrite = True\n\n    def cookiejar_from_dict(cookie_dict, cookiejar=None, overwrite=True):\n        \"\"\"Returns a CookieJar from a key/value dictionary.\n    \n        :param cookie_dict: Dict of key/values to insert into CookieJar.\n        :param cookiejar: (optional) A cookiejar to add the cookies to.\n        :param overwrite: (optional) If False, will not replace cookies\n            already in the jar with new ones.\n        :rtype: CookieJar\n        \"\"\"\n        if cookiejar is None:\n            cookiejar = RequestsCookieJar()\n    \n        if cookie_dict is not None:\n            names_from_jar = [cookie.name for cookie in cookiejar]\n            for name in cookie_dict:\n                if overwrite or (name not in names_from_jar):\n>                   cookiejar.set_cookie(create_cookie(name, cookie_dict[name]))\nE                   TypeError: string indices must be integers\n\n../venv/lib/python3.8/site-packages/requests/cookies.py:537: TypeError"}, "attachments": [{"name": "log", "source": "920598bd-1faa-4665-810e-edc9b6395f54-attachment.txt", "type": "text/plain"}], "start": 1700302289586, "stop": 1700302289586, "uuid": "53c60510-c89a-4bae-b648-ffe24dc62e2b", "historyId": "cd1675898b723cbd89228e6b77ac3762", "testCaseId": "cd1675898b723cbd89228e6b77ac3762", "fullName": "testcase.test_login2#test_get_project_details", "labels": [{"name": "parentSuite", "value": "testcase"}, {"name": "suite", "value": "test_login2"}, {"name": "host", "value": "lifaliangdeMacBook-Air.local"}, {"name": "thread", "value": "10734-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.test_login2"}]}